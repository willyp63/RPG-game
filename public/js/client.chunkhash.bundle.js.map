{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/engine/actors/wall.ts","webpack:///./src/engine/core/actor-factory.ts","webpack:///./src/engine/core/actor.ts","webpack:///./src/engine/core/app.ts","webpack:///./src/engine/core/stage.ts","webpack:///./src/engine/physics/collision-detector.ts","webpack:///./src/engine/physics/collision-handler.ts","webpack:///./src/engine/physics/collision.ts","webpack:///./src/engine/physics/direction.ts","webpack:///./src/engine/physics/vector.ts","webpack:///./src/engine/physics/wall-contact-map.ts","webpack:///./src/engine/services/area-service.ts","webpack:///./src/engine/util/get-json.ts","webpack:///./src/game/main.ts"],"names":[],"mappings":"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","file":"js/client.chunkhash.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"client\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/game/main.ts\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import HPActor from \"../core/actor\";\nimport HPVector from \"../physics/vector\";\nimport { Graphics } from \"pixi.js\";\n\nexport default class HPWall extends HPActor {\n\n  static get type() { return 'Wall'; }\n\n  get sprite() { return this._sprite; }\n  get size() { return this._size; }\n  get isWall() { return true; }\n\n  private _sprite: Graphics;\n\n  constructor(\n    position: HPVector,\n    private _size: HPVector,\n  ) {\n    // when creating a wall you specify the upper-left point, not the center\n    super(position.plus(_size.times(0.5)));\n\n    // paint a red box\n    this._sprite = new Graphics();\n    this._sprite.beginFill(0xFF0000);\n    this._sprite.drawRect(_size.x / -2, _size.y / -2, _size.x, _size.y);\n    this._sprite.endFill();\n  }\n}\n","import HPActorData from \"../services/data/actor-data\";\nimport HPActor from \"./actor\";\nimport HPWall from \"../actors/wall\";\nimport HPVector from \"../physics/vector\";\n\nexport default class HPActorFactory {\n\n  createFromData(data: HPActorData): HPActor  {\n    const actor = this._createFromData(data);\n    if (actor === undefined) throw new Error(`Failed to return actor for data: ${JSON.stringify(data)}`);\n    return actor;\n  }\n\n  protected _createFromData(data: HPActorData): HPActor | undefined {\n    if (data.type === HPWall.type) {\n      return new HPWall(\n        HPVector.fromData(data.position),\n        HPVector.fromData(data.props['size']),\n      );\n    }\n\n    return undefined;\n  }\n\n}\n","import { Container } from \"pixi.js\";\nimport HPEntity from \"../physics/entity\";\nimport HPVector from \"../physics/vector\";\nimport HPCollision from \"../physics/collision\";\nimport HPWallContactMap from \"../physics/wall-contact-map\";\n\nexport default abstract class HPActor implements HPEntity {\n\n  /* @override */\n  abstract get sprite(): Container;\n  abstract get size(): HPVector;\n  get isWall() { return false; }\n  get isWallBound() { return false; }\n  get isGravityBound() { return false; }\n  get isAirFrictionBound() { return false; }\n  get bounciness() { return 0.5; }\n  get slipperiness() { return 0.5; }\n  get weight() { return 1; }\n  get maxVelocity() { return 64; }\n\n  /* @override */\n  onTick() { }\n  onCollision(actor: HPActor, collision: HPCollision) { }\n\n  velocity = HPVector.Zero;\n  acceleration = HPVector.Zero;\n\n  wallContact = new HPWallContactMap();\n\n  isDead = false;\n  newBornActors: Array<HPActor> = [];\n\n  constructor(\n    public position: HPVector,\n  ) { }\n\n  beforeTick() {\n    this.velocity = this.velocity.plus(this.acceleration).capped(this.maxVelocity);\n    this.position = this.position.plus(this.velocity);\n    this.acceleration = HPVector.Zero;\n    this.wallContact = new HPWallContactMap();\n\n    // align sprite\n    this.sprite.x = this.position.x;\n    this.sprite.y = this.position.y;\n  }\n\n  push(force: HPVector) {\n    this.acceleration = this.acceleration.plus(force.times(1 / this.weight));\n  }\n\n  kill() {\n    this.isDead = true;\n  }\n\n}\n","import { Application, loader } from \"pixi.js\";\nimport HPVector from \"../physics/vector\";\nimport HPStage from \"./stage\";\nimport HPAreaService from \"../services/area-service\";\nimport HPAreaData from \"../services/data/area-data\";\nimport HPActorFactory from \"./actor-factory\";\n\nexport default class HPApp {\n\n  /** Underlying PIXI application */\n  private app: Application;\n\n  /** Element to render the app within */\n  private element: HTMLElement;\n\n  /** Main stage for actors */\n  private stage: HPStage;\n  \n  constructor(\n    viewSize: HPVector, // size of the app view in pixels\n    elementSelector: string, // identifies the DOM element the app should be rendered within\n    private actorFactory: HPActorFactory, // function that turns actor data into actors\n    private assets: Array<string>, // all required assets\n    private areaFile: string, // the file name of the starting area\n    gravityForce: HPVector, // universal force applied to all actors each tick\n    airFrictionCoefficient: number, // number from 0 to 1, the higher the number the more resistance actors will feel when moving\n  ) {\n\n    this.app = new Application({\n      width: viewSize.x,\n      height: viewSize.y,\n      transparent: false, \n      antialias: false, // required for pixelated textures\n      resolution: 3, // required for pixelated textures\n    });\n\n    this.element = document.body.querySelector(elementSelector) ||\n      (() => { throw new Error(`Can't find element with selector: ${elementSelector}`) })();\n\n    this.stage = new HPStage(this.app.stage, gravityForce, airFrictionCoefficient);\n\n    this.addPIXICanvasToScreen();\n  }\n\n  async start() {\n    await this.loadAssets();\n    this.setAreaData(await this.loadAreaData()); \n    this.startGameLoop();\n  }\n\n  private addPIXICanvasToScreen() {\n    this.element.appendChild(this.app.view);\n    this.scaleToFitWithinElement();\n    window.addEventListener('resize', this.scaleToFitWithinElement.bind(this));\n  }\n\n  private scaleToFitWithinElement() {\n    const scaleX = window.innerWidth / this.app.view.offsetWidth;\n    const scaleY = window.innerHeight / this.app.view.offsetHeight;\n    const scale = Math.min(scaleX, scaleY);\n    this.app.view.style.transform = `scale(${scale})`;\n  }\n\n  private loadAssets() {\n    return new Promise(resolve => loader.add(this.assets).load(resolve));\n  }\n\n  private loadAreaData() {\n    return HPAreaService.getAreaData(this.areaFile);\n  }\n\n  private setAreaData(areaData: HPAreaData) {\n    this.stage.clearActors();\n    areaData.actors.forEach(actorData => {\n      this.stage.addActor(this.actorFactory.createFromData(actorData));\n    });\n  }\n\n  private startGameLoop() {\n    this.app.ticker.add(() => this.stage.onTick());\n    this.app.start();\n  }\n\n}\n","import HPActor from './actor';\nimport { Container } from 'pixi.js';\nimport HPCollisionDetector from '../physics/collision-detector';\nimport HPCollisionHandler from '../physics/collision-handler';\nimport HPDirection from '../physics/direction';\nimport HPVector from '../physics/vector';\n\nexport default class HPStage {\n\n  private actors: Array<HPActor> = [];\n\n  constructor(\n    private rootContainer: Container,\n    private gravityForce: HPVector,\n    private airFrictionCoefficient: number,\n  ) { }\n\n  addActor(actor: HPActor) {\n    this.actors.push(actor);\n    this.rootContainer.addChild(actor.sprite);\n  }\n\n  removeActorAt(i: number) {\n    this.rootContainer.removeChild(this.actors[i].sprite);\n    this.actors.splice(i, 1);\n  }\n\n  clearActors() {\n    while (this.actors[0]) this.removeActorAt(0);\n  }\n\n  onTick() {\n    this.actors.forEach(actor => actor.beforeTick());\n    this.handleCollisions();\n\n    this.actors.forEach(actor => {\n      this.killIfSquished(actor);\n      this.applyGravity(actor);\n      this.applyAirFriction(actor);\n      actor.onTick();\n      this.addNewBornActors(actor);\n    });\n\n    this.removeDeadActors();\n  }\n\n  private handleCollisions() {\n    for (let i = 0; i < this.actors.length; i++) {\n      for (let j = i + 1; j < this.actors.length; j++) {\n        const actor1 = this.actors[i];\n        const actor2 = this.actors[j];\n        const collision = HPCollisionDetector.detect(actor1, actor2);\n\n        HPCollisionHandler.handle(actor1, actor2, collision);\n        actor1.onCollision(actor2, collision);\n        actor2.onCollision(actor1, collision.withOppositeDirection());\n      }\n    }\n  }\n\n  private killIfSquished(actor: HPActor) {\n    if (actor.wallContact.all([HPDirection.Up, HPDirection.Down]) ||\n        actor.wallContact.all([HPDirection.Left, HPDirection.Right])) {\n      actor.kill();\n    }\n  }\n\n  private applyGravity(actor: HPActor) {\n    if (actor.isGravityBound) actor.push(this.gravityForce);\n  }\n\n  private applyAirFriction(actor: HPActor) {\n    if (actor.isAirFrictionBound) actor.push(actor.velocity.times(-this.airFrictionCoefficient));\n  }\n\n  private addNewBornActors(actor: HPActor) {\n    if (!actor.newBornActors.length) return;\n\n    actor.newBornActors.forEach(actor => {\n      this.addActor(actor);\n    });\n    actor.newBornActors = [];\n  }\n\n  private removeDeadActors() {\n    for (let i = 0; i < this.actors.length; i++) {\n      if (this.actors[i].isDead) this.removeActorAt(i--);\n    }\n  }\n\n}\n","import HPEntity from \"./entity\";\nimport HPCollision from \"./collision\";\nimport HPDirection from \"./direction\";\nimport HPVector from \"./vector\";\n\nexport default class HPCollisionDetector {\n\n  static detect(\n    e1: HPEntity,\n    e2: HPEntity,\n  ): HPCollision {\n\n    const combinedHalfSize = e1.size.times(0.5).plus(e2.size.times(0.5));\n    const velocityDiff = e1.velocity.minus(e2.velocity);\n    const positionDiff = e1.position.minus(e2.position);\n\n    const hit =\n      Math.abs(positionDiff.x) < combinedHalfSize.x &&\n      Math.abs(positionDiff.y) < combinedHalfSize.y;\n\n    if (!hit) return new HPCollision();\n\n    const penetration = HPCollisionDetector.getPenetrationVector(\n      positionDiff,\n      velocityDiff,\n      combinedHalfSize,\n    );\n    \n    let direction = (penetration.x > penetration.y)\n      ? velocityDiff.x > 0 ? HPDirection.Right : HPDirection.Left\n      : velocityDiff.y > 0 ? HPDirection.Down : HPDirection.Up;\n\n    return new HPCollision(direction);\n  }\n\n  private static getPenetrationVector(\n    positionDiff: HPVector,\n    velocityDiff: HPVector,\n    combinedHalfSize: HPVector,\n  ) {\n    return new HPVector(\n      HPCollisionDetector.getPenetrationScalar(positionDiff.x, velocityDiff.x, combinedHalfSize.x),\n      HPCollisionDetector.getPenetrationScalar(positionDiff.y, velocityDiff.y, combinedHalfSize.y),\n    );\n  }\n\n  private static getPenetrationScalar(\n    positionDiff: number,\n    velocityDiff: number,\n    combinedHalfSize: number,\n  ) {\n    const p = velocityDiff > 0\n      ? combinedHalfSize + positionDiff\n      : combinedHalfSize - positionDiff;\n    return 1 / Math.abs(p - Math.abs(velocityDiff));\n  }\n\n}\n","import HPEntity from \"./entity\";\nimport HPCollision from \"./collision\";\nimport HPDirection from \"./direction\";\nimport HPVector from \"./vector\";\n\nexport default class HPCollisionHandler {\n\n  static handle(\n    e1: HPEntity,\n    e2: HPEntity,\n    collision: HPCollision,\n  ) {\n    HPCollisionHandler.handleWithTargetEntity(e1, e2, collision);\n    HPCollisionHandler.handleWithTargetEntity(e2, e1, collision);\n  }\n\n  static handleWithTargetEntity(\n    targetEntity: HPEntity,\n    otherEntity: HPEntity,\n    collision: HPCollision,\n  ) {\n    HPCollisionHandler.handleWallCollision(targetEntity, otherEntity, collision);\n  }\n\n  private static handleWallCollision(\n    targetEntity: HPEntity,\n    otherEntity: HPEntity,\n    collision: HPCollision,\n  ) {\n    if (!targetEntity.isWallBound || !otherEntity.isWall) return;\n\n    HPCollisionHandler.recedeFromWall(targetEntity, otherEntity, collision);\n    HPCollisionHandler.bounceOffWall(targetEntity, otherEntity, collision);\n    HPCollisionHandler.applyFloorFriction(targetEntity, otherEntity, collision);\n    targetEntity.wallContact.setContact(collision.direction);\n  }\n\n  private static recedeFromWall(\n    entity: HPEntity,\n    wall: HPEntity,\n    collision: HPCollision,\n  ) {\n    const combinedHalfSize = entity.size.times(0.5).plus(wall.size.times(0.5));\n\n    if (collision.direction === HPDirection.Up) {\n      entity.position.y = wall.position.y + combinedHalfSize.y;\n    } else if (collision.direction === HPDirection.Right) {\n      entity.position.x = wall.position.x - combinedHalfSize.x;\n    } else if (collision.direction === HPDirection.Down) {\n      entity.position.y = wall.position.y - combinedHalfSize.y;\n    } else if (collision.direction === HPDirection.Left) {\n      entity.position.x = wall.position.x + combinedHalfSize.x;\n    }\n  }\n\n  private static bounceOffWall(\n    entity: HPEntity,\n    wall: HPEntity,\n    collision: HPCollision,\n  ) {\n    const combinedBounciness = (wall.bounciness + entity.bounciness) / 2;\n\n    if (collision.direction === HPDirection.Up) {\n      entity.velocity.y = Math.min(wall.velocity.y, entity.velocity.y * -combinedBounciness);\n    } else if (collision.direction === HPDirection.Right) {\n      entity.velocity.x = Math.max(wall.velocity.x, entity.velocity.x * -combinedBounciness);\n    } else if (collision.direction === HPDirection.Down) {\n      entity.velocity.y = Math.max(wall.velocity.y, entity.velocity.y * -combinedBounciness);\n    } else if (collision.direction === HPDirection.Left) {\n      entity.velocity.x = Math.min(wall.velocity.x, entity.velocity.x * -combinedBounciness);\n    }\n  }\n\n  private static applyFloorFriction(\n    entity: HPEntity,\n    wall: HPEntity,\n    collision: HPCollision,\n  ) {\n    if (collision.direction !== HPDirection.Up) return;\n\n    const velocityDiff = wall.velocity.minus(entity.velocity);\n    entity.push(new HPVector(velocityDiff.x * (1 - wall.slipperiness), 0));\n\n    // stick to floor when going down elevators\n    if (wall.velocity.y > 0) entity.velocity.y = wall.velocity.y;\n  }\n\n}\n","import HPDirection from \"./direction\";\n\nexport default class HPCollision {\n\n  public hit: boolean;\n  public direction: HPDirection;\n\n  constructor(\n    _direction: HPDirection | undefined = undefined,\n  ) {\n    this.hit = _direction !== undefined;\n    this.direction = _direction || HPDirection.Down;\n  }\n\n  withOppositeDirection() {\n    return new HPCollision(this.direction ? this.direction * -1 : undefined);\n  }\n\n}\n","/**\n * Axis-aligned directions within the 2D plane\n * \n * To get the opposite direction on the same axis, multiply by -1\n */\nenum HPDirection {\n  Down = 1,\n  Up = -1,\n  Right = 2,\n  Left = -2,\n};\nexport default HPDirection;\n","export default class HPVector {\n\n  static get Zero() { return new HPVector(0, 0); }\n\n  static fromData(data: { x: number, y: number }) { return new HPVector(data.x, data.y); }\n\n  constructor(\n    public x: number,\n    public y: number,\n  ) { }\n\n  get length() { return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2)); }\n  get angle() { return Math.atan2(this.y, this.x); }\n\n  plus(otherVector: HPVector) {\n    return new HPVector(this.x + otherVector.x, this.y + otherVector.y);\n  }\n\n  minus(otherVector: HPVector) {\n    return new HPVector(this.x - otherVector.x, this.y - otherVector.y);\n  }\n\n  times(scaleVector: HPVector | number) {\n    if (typeof scaleVector === 'number') {\n      scaleVector = new HPVector(scaleVector, scaleVector);\n    }\n\n    return new HPVector(this.x * scaleVector.x, this.y * scaleVector.y);\n  }\n\n  dot(scaleVector: HPVector) {\n    return this.x * scaleVector.x + this.y * scaleVector.y;\n  }\n\n  capped(capVector: HPVector | number) {\n    if (typeof capVector === 'number') {\n      capVector = new HPVector(capVector, capVector);\n    }\n\n    const newX = this.x > 0 ? Math.min(this.x, capVector.x) : Math.max(this.x, -capVector.x);\n    const newY = this.y > 0 ? Math.min(this.y, capVector.y) : Math.max(this.y, -capVector.y);\n    return new HPVector(newX, newY);\n  }\n\n  withNewX(newX: number) {\n    return new HPVector(newX, this.y);\n  }\n\n  withNewY(newY: number) {\n    return new HPVector(this.x, newY);\n  }\n\n  toUnitVector() {\n    return new HPVector(this.x / this.length, this.y / this.length);\n  }\n\n  flippedHorizontally(isFlipped = true) {\n    return this.times(new HPVector(isFlipped ? -1 : 1, 1));\n  }\n\n}\n","import HPDirection from \"./direction\";\n\nexport default class HPWallContactMap {\n\n  private map: {\n    [HPDirection.Up]: boolean,\n    [HPDirection.Down]: boolean,\n    [HPDirection.Right]: boolean,\n    [HPDirection.Left]: boolean,\n  } = {\n    [HPDirection.Up]: false,\n    [HPDirection.Down]: false,\n    [HPDirection.Right]: false,\n    [HPDirection.Left]: false,\n  };\n\n  setContact(direction: HPDirection) {\n    this.map[direction] = true;\n  }\n\n  all(directions: Array<HPDirection>) {\n    return directions.every(direction => this.map[direction]);\n  }\n\n  any(directions: Array<HPDirection>) {\n    return directions.some(direction => this.map[direction]);\n  }\n\n}\n","import getJson from \"../util/get-json\";\nimport HPAreaData from \"./data/area-data\";\n\nexport default class HPAreaService {\n\n  static getAreaData(areaFile: string) {\n    return getJson(areaFile).then(json => <HPAreaData>json);\n  }\n\n}\n","export default (url: string) => {\n  return new Promise((resolve) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function() {\n      if (xhr.status === 200) {\n        resolve(xhr.response);\n      } else {\n        throw new Error(`Error fetching JSON from: ${url}`);\n      }\n    };\n    xhr.send();\n  });\n};\n","import HPApp from '../engine/core/app';\nimport HPVector from '../engine/physics/vector';\nimport HPActorFactory from '../engine/core/actor-factory';\nimport HPActorData from '../engine/services/data/actor-data';\nimport HPActor from '../engine/core/actor';\n\nclass TGActorFactory extends HPActorFactory {\n\n  protected _createFromData(data: HPActorData): HPActor | undefined {\n    return super._createFromData(data) || this.__createFromData(data);\n  }\n\n  __createFromData(data: HPActorData): HPActor | undefined {\n    return undefined;\n  }\n}\n\nconst app = new HPApp(\n  new HPVector(825, 525),\n  '#game-container',\n  new TGActorFactory(),\n  [],\n  'public/areas/test-1.json',\n  new HPVector(0, 1),\n  0.01,\n);\n\napp.start();\n"],"sourceRoot":""}