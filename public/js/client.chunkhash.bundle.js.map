{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/engine/actors/static-shape-actor.ts","webpack:///./src/engine/core/actor-type.ts","webpack:///./src/engine/core/actor.ts","webpack:///./src/engine/core/app.ts","webpack:///./src/engine/core/stage.ts","webpack:///./src/engine/interaction/key-listener.ts","webpack:///./src/engine/physics/collision-detector.ts","webpack:///./src/engine/physics/collision-handler.ts","webpack:///./src/engine/physics/collision.ts","webpack:///./src/engine/physics/direction.ts","webpack:///./src/engine/physics/vector.ts","webpack:///./src/engine/physics/wall-contact-map.ts","webpack:///./src/engine/services/area-service.ts","webpack:///./src/engine/util/get-json.ts","webpack:///./src/engine/util/random.ts","webpack:///./src/engine/util/set-ticks-out.ts","webpack:///./src/game/actor-factory.ts","webpack:///./src/game/actors/fire-ball.ts","webpack:///./src/game/actors/hero.ts","webpack:///./src/game/actors/wall.ts","webpack:///./src/game/actors/wandering-target.ts","webpack:///./src/game/main.ts"],"names":[],"mappings":"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","file":"js/client.chunkhash.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"client\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/game/main.ts\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import HPActor from \"../core/actor\";\nimport HPVector from \"../physics/vector\";\nimport { Graphics } from \"pixi.js\";\n\ninterface HPStaticShapeOptions {\n  color: number;\n  borderWidth: number;\n  borderColor: number;\n  cornerRadius: number;\n  isRound: false;\n}\n\ninterface HPStaticShapeArgs {\n  color: number;\n  borderWidth?: number;\n  borderColor?: number;\n  cornerRadius?: number;\n  isRound?: false;\n}\n\nconst defaultOptions: HPStaticShapeOptions = {\n  color: 0xFFFFFF,\n  borderWidth: 0,\n  borderColor: 0x000000,\n  cornerRadius: 0,\n  isRound: false,\n};\n\nexport default abstract class HPStaticShapeActor extends HPActor {\n\n  get sprite() { return this._sprite; }\n  private _sprite: Graphics;\n\n  private options: HPStaticShapeOptions;\n\n  constructor(\n    position: HPVector,\n    _options: HPStaticShapeArgs,\n  ) {\n    super(position);\n\n    this.options = Object.assign({}, defaultOptions, _options);\n    this._sprite = new Graphics();\n  }\n\n  init() {\n    this._sprite.beginFill(this.options.color);\n\n    let adjustedSize = this.size;\n    if (this.options.borderWidth > 0) {\n      this._sprite.lineStyle(this.options.borderWidth, this.options.borderColor);\n      const borderSize = new HPVector(this.options.borderWidth, this.options.borderWidth);\n      adjustedSize = this.size.minus(borderSize);\n    }\n\n    if (this.options.isRound) {\n      this._sprite.drawEllipse(0, 0, adjustedSize.x / 2, adjustedSize.y / 2);\n    } else {\n      this.options.cornerRadius > 0\n        ? this._sprite.drawRoundedRect(adjustedSize.x / -2, adjustedSize.y / -2, adjustedSize.x, adjustedSize.y, this.options.cornerRadius)\n        : this._sprite.drawRect(adjustedSize.x / -2, adjustedSize.y / -2, adjustedSize.x, adjustedSize.y);\n    }\n    \n    this._sprite.endFill();\n  }\n\n}\n","enum HPActorType {\n  Friendly,\n  Unfriendly,\n  Nuetral,\n};\n\nexport default HPActorType;\n","import { Container } from \"pixi.js\";\nimport HPEntity from \"../physics/entity\";\nimport HPVector from \"../physics/vector\";\nimport HPCollision from \"../physics/collision\";\nimport HPWallContactMap from \"../physics/wall-contact-map\";\nimport HPActorType from \"./actor-type\";\nimport HPDirection from \"../physics/direction\";\n\nexport default abstract class HPActor implements HPEntity {\n\n  /* @override */\n  static get id() { return ''; }\n\n  /* @override */\n  abstract get sprite(): Container;\n  abstract get size(): HPVector;\n  get type() { return HPActorType.Nuetral; }\n  get isWall() { return false; }\n  get isWallBound() { return true; }\n  get isGravityBound() { return true; }\n  get isAirFrictionBound() { return true; }\n  get canWalkOnAir() { return false; }\n  get bounciness() { return 0.2; }\n  get slipperiness() { return 0.2; }\n  get weight() { return 1; }\n  get maxVelocity() { return 64; }\n\n  /* @override */\n  init() { }\n  destroy() { }\n  onCollision(actor: HPActor, collision: HPCollision) { }\n\n  velocity = HPVector.Zero;\n  acceleration = HPVector.Zero;\n\n  moveForce = HPVector.Zero;\n  facingDirection = HPDirection.Right;\n\n  wallContact = new HPWallContactMap();\n  isOnGround = false;\n\n  isDead = false;\n  newBornActors: Array<HPActor> = [];\n\n  constructor(\n    public position: HPVector,\n  ) { }\n\n  /* @override */\n  onTick() {\n    this.sprite.x = this.position.x;\n    this.sprite.y = this.position.y;\n\n    this.isOnGround = this.wallContact.all([HPDirection.Down]);\n    if (this.isOnGround || this.canWalkOnAir) this.push(this.moveForce);\n  }\n\n  beforeTick() {\n    this.velocity = this.velocity.plus(this.acceleration).capped(this.maxVelocity);\n    this.position = this.position.plus(this.velocity);\n    this.acceleration = HPVector.Zero;\n    this.wallContact = new HPWallContactMap();\n  }\n\n  move(moveForce: HPVector, faceMoveDirection = true) {\n    this.moveForce = moveForce;\n\n    if (faceMoveDirection && moveForce.x !== 0) {\n      this.facingDirection = moveForce.x < 0 ? HPDirection.Left : HPDirection.Right;\n    }\n  }\n\n  push(force: HPVector) {\n    this.acceleration = this.acceleration.plus(force.times(1 / this.weight));\n  }\n\n  kill() {\n    this.isDead = true;\n  }\n\n  get isFacingLeft() { return this.facingDirection === HPDirection.Left; }\n\n}\n","import { Application, loader } from \"pixi.js\";\nimport HPVector from \"../physics/vector\";\nimport HPStage from \"./stage\";\nimport HPAreaService from \"../services/area-service\";\nimport HPAreaData from \"../services/data/area-data\";\nimport HPActorFactory from \"./actor-factory\";\nimport HPActor from \"./actor\";\n\nexport default class HPApp {\n\n  /** Underlying PIXI application */\n  private app: Application;\n\n  /** Element to render the app within */\n  private element: HTMLElement;\n\n  /** Main stage for actors */\n  private stage: HPStage;\n  \n  constructor(\n    viewSize: HPVector, // size of the app view in pixels\n    elementSelector: string, // identifies the DOM element the app should be rendered within\n    private actorFactory: HPActorFactory, // function that turns actor data into actors\n    private assets: Array<string>, // all required assets\n    private areaFile: string, // the file name of the starting area\n    private hero: HPActor, // the hero\n    private heroStart: HPVector, // the hero's starting position\n    gravityForce: HPVector, // universal force applied to all actors each tick\n    airFrictionCoefficient: number, // number from 0 to 1, the higher the number the more resistance actors will feel when moving\n  ) {\n\n    this.app = new Application({\n      width: viewSize.x,\n      height: viewSize.y,\n      transparent: false,\n      backgroundColor: 0xFFFFFF,\n      antialias: false, // required for pixelated textures\n      resolution: 3, // required for pixelated textures\n    });\n\n    this.element = document.body.querySelector(elementSelector) ||\n      (() => { throw new Error(`Can't find element with selector: ${elementSelector}`) })();\n\n    this.stage = new HPStage(\n      viewSize,\n      this.app.stage,\n      hero,\n      gravityForce,\n      airFrictionCoefficient,\n    );\n\n    this.addPIXICanvasToScreen();\n  }\n\n  async start() {\n    await this.loadAssets();\n    this.setAreaData(await this.loadAreaData()); \n    this.addHero();\n    this.startGameLoop();\n  }\n\n  private addPIXICanvasToScreen() {\n    this.element.appendChild(this.app.view);\n    this.scaleToFitWithinElement();\n    window.addEventListener('resize', this.scaleToFitWithinElement.bind(this));\n  }\n\n  private scaleToFitWithinElement() {\n    const scaleX = window.innerWidth / this.app.view.offsetWidth;\n    const scaleY = window.innerHeight / this.app.view.offsetHeight;\n    const scale = Math.min(scaleX, scaleY);\n    this.app.view.style.transform = `scale(${scale})`;\n  }\n\n  private loadAssets() {\n    return new Promise(resolve => loader.add(this.assets).load(resolve));\n  }\n\n  private loadAreaData() {\n    return HPAreaService.getAreaData(this.areaFile);\n  }\n\n  private setAreaData(areaData: HPAreaData) {\n    this.stage.size = HPVector.fromData(areaData.size);\n\n    this.stage.clearActors();\n    areaData.actors.forEach(data => {\n      const actor = this.actorFactory[data.id](data);\n      if (actor === undefined) throw new Error(`Actor factory failed to return actor for data: ${JSON.stringify(data)}`);\n      this.stage.addActor(actor);\n    });\n  }\n\n  private addHero() {\n    this.hero.position = this.heroStart;\n    this.stage.addActor(this.hero);\n  }\n\n  private startGameLoop() {\n    this.app.ticker.add(() => this.stage.onTick());\n    this.app.start();\n  }\n\n}\n","import HPActor from './actor';\nimport { Container } from 'pixi.js';\nimport HPCollisionDetector from '../physics/collision-detector';\nimport HPCollisionHandler from '../physics/collision-handler';\nimport HPDirection from '../physics/direction';\nimport HPVector from '../physics/vector';\n\nexport default class HPStage {\n  \n  size = HPVector.Zero;\n\n  private actors: Array<HPActor> = [];\n\n  constructor(\n    private viewSize: HPVector,\n    private rootContainer: Container,\n    private actorToFollow: HPActor,\n    private gravityForce: HPVector,\n    private airFrictionCoefficient: number,\n  ) { }\n\n  addActor(actor: HPActor) {\n    this.actors.push(actor);\n    actor.init();\n    this.rootContainer.addChild(actor.sprite);\n  }\n\n  removeActorAt(i: number) {\n    this.rootContainer.removeChild(this.actors[i].sprite);\n    this.actors[i].destroy();\n    this.actors.splice(i, 1);\n  }\n\n  clearActors() {\n    while (this.actors[0]) this.removeActorAt(0);\n  }\n\n  onTick() {\n    this.actors.forEach(actor => actor.beforeTick());\n    this.handleCollisions();\n    this.followActor();\n\n    this.actors.forEach(actor => {\n      this.killIfSquished(actor);\n      this.applyGravity(actor);\n      this.applyAirFriction(actor);\n      actor.onTick();\n      this.addNewBornActors(actor);\n    });\n\n    this.removeDeadActors();\n  }\n\n  private handleCollisions() {\n    for (let i = 0; i < this.actors.length; i++) {\n      for (let j = i + 1; j < this.actors.length; j++) {\n        const actor1 = this.actors[i];\n        const actor2 = this.actors[j];\n        const collision = HPCollisionDetector.detect(actor1, actor2);\n\n        HPCollisionHandler.handle(actor1, actor2, collision);\n        actor1.onCollision(actor2, collision);\n        actor2.onCollision(actor1, collision.withOppositeDirection());\n      }\n    }\n  }\n\n  private killIfSquished(actor: HPActor) {\n    if (actor.wallContact.all([HPDirection.Up, HPDirection.Down]) ||\n        actor.wallContact.all([HPDirection.Left, HPDirection.Right])) {\n      actor.kill();\n    }\n  }\n\n  private applyGravity(actor: HPActor) {\n    if (actor.isGravityBound) actor.push(this.gravityForce);\n  }\n\n  private applyAirFriction(actor: HPActor) {\n    if (actor.isAirFrictionBound) actor.push(actor.velocity.times(-this.airFrictionCoefficient));\n  }\n\n  private addNewBornActors(actor: HPActor) {\n    if (!actor.newBornActors.length) return;\n\n    actor.newBornActors.forEach(actor => {\n      this.addActor(actor);\n    });\n    actor.newBornActors = [];\n  }\n\n  private removeDeadActors() {\n    for (let i = 0; i < this.actors.length; i++) {\n      if (this.actors[i].isDead) this.removeActorAt(i--);\n    }\n  }\n\n  private followActor() {\n    let stageX = this.viewSize.x / 2 - this.actorToFollow.position.x;\n    stageX = Math.min(stageX, 0);\n    stageX = Math.max(stageX, this.viewSize.x - this.size.x);\n\n    let stageY = this.viewSize.y / 2 - this.actorToFollow.position.y;\n    stageY = Math.min(stageY, 0);\n    stageY = Math.max(stageY, this.viewSize.y - this.size.y);\n\n    this.rootContainer.x = stageX;\n    this.rootContainer.y = stageY;\n  }\n\n}\n","export default class HPKeyListener {\n  private _code: number;\n  private _onPress: Function;\n  private _onRelease?: Function;\n  private _isDown = false;\n\n  constructor(keyCode: number, onPress: Function, onRelease?: Function) {\n    this._code = keyCode;\n    this._onPress = onPress;\n    this._onRelease = onRelease;\n\n    this._downHandler = this._downHandler.bind(this);\n    this._upHandler = this._upHandler.bind(this);\n\n    window.addEventListener('keydown', this._downHandler, false);\n    window.addEventListener('keyup', this._upHandler, false);\n  }\n\n  destroy() {\n    window.removeEventListener('keydown', this._downHandler);\n    window.removeEventListener('keyup', this._upHandler);\n  }\n\n  _downHandler(e: KeyboardEvent) {\n    if (e.keyCode === this._code) {\n      if (!this._isDown && this._onPress) this._onPress();\n      this._isDown = true;\n    }\n  }\n\n  _upHandler(e: KeyboardEvent) {\n    if (e.keyCode === this._code) {\n      if (this._isDown && this._onRelease) this._onRelease();\n      this._isDown = false;\n    }\n  }\n}\n","import HPEntity from \"./entity\";\nimport HPCollision from \"./collision\";\nimport HPDirection from \"./direction\";\nimport HPVector from \"./vector\";\n\nexport default class HPCollisionDetector {\n\n  static detect(\n    e1: HPEntity,\n    e2: HPEntity,\n  ): HPCollision {\n\n    const combinedHalfSize = e1.size.times(0.5).plus(e2.size.times(0.5));\n    const velocityDiff = e1.velocity.minus(e2.velocity);\n    const positionDiff = e1.position.minus(e2.position);\n\n    const hit =\n      Math.abs(positionDiff.x) < combinedHalfSize.x &&\n      Math.abs(positionDiff.y) < combinedHalfSize.y;\n\n    if (!hit) return new HPCollision();\n\n    const penetration = HPCollisionDetector.getPenetrationVector(\n      positionDiff,\n      velocityDiff,\n      combinedHalfSize,\n    );\n    \n    let direction = (penetration.x > penetration.y)\n      ? velocityDiff.x > 0 ? HPDirection.Right : HPDirection.Left\n      : velocityDiff.y > 0 ? HPDirection.Down : HPDirection.Up;\n\n    return new HPCollision(direction);\n  }\n\n  private static getPenetrationVector(\n    positionDiff: HPVector,\n    velocityDiff: HPVector,\n    combinedHalfSize: HPVector,\n  ) {\n    return new HPVector(\n      HPCollisionDetector.getPenetrationScalar(positionDiff.x, velocityDiff.x, combinedHalfSize.x),\n      HPCollisionDetector.getPenetrationScalar(positionDiff.y, velocityDiff.y, combinedHalfSize.y),\n    );\n  }\n\n  private static getPenetrationScalar(\n    positionDiff: number,\n    velocityDiff: number,\n    combinedHalfSize: number,\n  ) {\n    const p = velocityDiff > 0\n      ? combinedHalfSize + positionDiff\n      : combinedHalfSize - positionDiff;\n    return 1 / Math.abs(p - Math.abs(velocityDiff));\n  }\n\n}\n","import HPEntity from \"./entity\";\nimport HPCollision from \"./collision\";\nimport HPDirection from \"./direction\";\nimport HPVector from \"./vector\";\n\nexport default class HPCollisionHandler {\n\n  static handle(\n    e1: HPEntity,\n    e2: HPEntity,\n    collision: HPCollision,\n  ) {\n    HPCollisionHandler.handleWithTargetEntity(e1, e2, collision);\n    HPCollisionHandler.handleWithTargetEntity(e2, e1, collision);\n  }\n\n  static handleWithTargetEntity(\n    targetEntity: HPEntity,\n    otherEntity: HPEntity,\n    collision: HPCollision,\n  ) {\n    if (!collision.hit) return;\n\n    HPCollisionHandler.handleWallCollision(targetEntity, otherEntity, collision);\n  }\n\n  private static handleWallCollision(\n    targetEntity: HPEntity,\n    otherEntity: HPEntity,\n    collision: HPCollision,\n  ) {\n    if (!targetEntity.isWallBound || !otherEntity.isWall) return;\n\n    HPCollisionHandler.recedeFromWall(targetEntity, otherEntity, collision);\n    HPCollisionHandler.bounceOffWall(targetEntity, otherEntity, collision);\n    HPCollisionHandler.applyFloorFriction(targetEntity, otherEntity, collision);\n    targetEntity.wallContact.setContact(collision.direction * -1);\n  }\n\n  private static recedeFromWall(\n    entity: HPEntity,\n    wall: HPEntity,\n    collision: HPCollision,\n  ) {\n    const combinedHalfSize = entity.size.times(0.5).plus(wall.size.times(0.5));\n\n    if (collision.direction === HPDirection.Down) {\n      entity.position.y = wall.position.y + combinedHalfSize.y;\n    } else if (collision.direction === HPDirection.Left) {\n      entity.position.x = wall.position.x - combinedHalfSize.x;\n    } else if (collision.direction === HPDirection.Up) {\n      entity.position.y = wall.position.y - combinedHalfSize.y;\n    } else if (collision.direction === HPDirection.Right) {\n      entity.position.x = wall.position.x + combinedHalfSize.x;\n    }\n  }\n\n  private static bounceOffWall(\n    entity: HPEntity,\n    wall: HPEntity,\n    collision: HPCollision,\n  ) {\n    const combinedBounciness = (wall.bounciness + entity.bounciness) / 2;\n\n    if (collision.direction === HPDirection.Up) {\n      entity.velocity.y = Math.min(wall.velocity.y, entity.velocity.y * -combinedBounciness);\n    } else if (collision.direction === HPDirection.Right) {\n      entity.velocity.x = Math.max(wall.velocity.x, entity.velocity.x * -combinedBounciness);\n    } else if (collision.direction === HPDirection.Down) {\n      entity.velocity.y = Math.max(wall.velocity.y, entity.velocity.y * -combinedBounciness);\n    } else if (collision.direction === HPDirection.Left) {\n      entity.velocity.x = Math.min(wall.velocity.x, entity.velocity.x * -combinedBounciness);\n    }\n  }\n\n  private static applyFloorFriction(\n    entity: HPEntity,\n    wall: HPEntity,\n    collision: HPCollision,\n  ) {\n    if (collision.direction !== HPDirection.Up) return;\n\n    const velocityDiff = wall.velocity.minus(entity.velocity);\n    entity.push(new HPVector(velocityDiff.x * (1 - wall.slipperiness), 0));\n\n    // stick to floor when going down elevators\n    if (wall.velocity.y > 0) entity.velocity.y = wall.velocity.y;\n  }\n\n}\n","import HPDirection from \"./direction\";\n\nexport default class HPCollision {\n\n  public hit: boolean;\n  public direction: HPDirection;\n\n  constructor(\n    _direction: HPDirection | undefined = undefined,\n  ) {\n    this.hit = _direction !== undefined;\n    this.direction = _direction !== undefined ? _direction : HPDirection.Down;\n  }\n\n  withOppositeDirection() {\n    return new HPCollision(this.hit ? this.direction * -1 : undefined);\n  }\n\n}\n","/**\n * Axis-aligned directions within the 2D plane\n * \n * To get the opposite direction on the same axis, multiply by -1\n */\nenum HPDirection {\n  Down = 1,\n  Up = -1,\n  Right = 2,\n  Left = -2,\n};\nexport default HPDirection;\n","export default class HPVector {\n\n  static get Zero() { return new HPVector(0, 0); }\n\n  static fromData(data: { x: number, y: number }) { return new HPVector(data.x, data.y); }\n\n  constructor(\n    public x: number,\n    public y: number,\n  ) { }\n\n  get length() { return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2)); }\n  get angle() { return Math.atan2(this.y, this.x); }\n\n  plus(otherVector: HPVector) {\n    return new HPVector(this.x + otherVector.x, this.y + otherVector.y);\n  }\n\n  minus(otherVector: HPVector) {\n    return new HPVector(this.x - otherVector.x, this.y - otherVector.y);\n  }\n\n  times(scaleVector: HPVector | number) {\n    if (typeof scaleVector === 'number') {\n      scaleVector = new HPVector(scaleVector, scaleVector);\n    }\n\n    return new HPVector(this.x * scaleVector.x, this.y * scaleVector.y);\n  }\n\n  dot(scaleVector: HPVector) {\n    return this.x * scaleVector.x + this.y * scaleVector.y;\n  }\n\n  capped(capVector: HPVector | number) {\n    if (typeof capVector === 'number') {\n      capVector = new HPVector(capVector, capVector);\n    }\n\n    const newX = this.x > 0 ? Math.min(this.x, capVector.x) : Math.max(this.x, -capVector.x);\n    const newY = this.y > 0 ? Math.min(this.y, capVector.y) : Math.max(this.y, -capVector.y);\n    return new HPVector(newX, newY);\n  }\n\n  withNewX(newX: number) {\n    return new HPVector(newX, this.y);\n  }\n\n  withNewY(newY: number) {\n    return new HPVector(this.x, newY);\n  }\n\n  toUnitVector() {\n    return new HPVector(this.x / this.length, this.y / this.length);\n  }\n\n  flipHorz(isFlipped = true) {\n    return this.times(new HPVector(isFlipped ? -1 : 1, 1));\n  }\n\n}\n","import HPDirection from \"./direction\";\n\nexport default class HPWallContactMap {\n\n  private map: {\n    [HPDirection.Up]: boolean,\n    [HPDirection.Down]: boolean,\n    [HPDirection.Right]: boolean,\n    [HPDirection.Left]: boolean,\n  } = {\n    [HPDirection.Up]: false,\n    [HPDirection.Down]: false,\n    [HPDirection.Right]: false,\n    [HPDirection.Left]: false,\n  };\n\n  setContact(direction: HPDirection) {\n    this.map[direction] = true;\n  }\n\n  all(directions: Array<HPDirection>) {\n    return directions.every(direction => this.map[direction]);\n  }\n\n  any(directions: Array<HPDirection>) {\n    return directions.some(direction => this.map[direction]);\n  }\n\n}\n","import getJson from \"../util/get-json\";\nimport HPAreaData from \"./data/area-data\";\n\nexport default class HPAreaService {\n\n  static getAreaData(areaFile: string) {\n    return getJson(areaFile).then(json => <HPAreaData>json);\n  }\n\n}\n","export default (url: string) => {\n  return new Promise((resolve) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function() {\n      if (xhr.status === 200) {\n        resolve(xhr.response);\n      } else {\n        throw new Error(`Error fetching JSON from: ${url}`);\n      }\n    };\n    xhr.send();\n  });\n};\n","export default class HPRandom {\n\n  static int(arg1: number, arg2: number | undefined): number {\n    // handle 1 arg case (0 to arg1)\n    if (arg2 === undefined) {\n      return Math.floor(Math.random() * (arg1 + 1));\n    }\n\n    // handle 2 arg case (arg1 to arg2)\n    return Math.floor(Math.random() * (arg2 + 1 - arg1)) + arg1;\n  }\n\n  static chance(hitPercent: number): boolean {\n    return Math.random() < hitPercent;\n  }\n\n}\n","import { ticker } from \"pixi.js\";\n\nexport default (callback: Function, numTicks: number): Function => {\n  let ticks = 0;\n  const onTick = () => {\n    ticks++;\n    if (ticks >= numTicks) {\n      ticker.shared.remove(onTick);\n      callback();\n    }\n  };\n  ticker.shared.add(onTick);\n\n  return onTick;\n};\n\nexport const clearTicksOut = (onTick: Function) => {\n  ticker.shared.remove(onTick);\n};\n","import HPActorData from \"../engine/services/data/actor-data\";\nimport TGWall from \"./actors/wall\";\nimport HPVector from \"../engine/physics/vector\";\nimport TGWanderingTarget from \"./actors/wandering-target\";\nimport HPActorFactory from \"../engine/core/actor-factory\";\n\nconst TGActorFactory: HPActorFactory = {\n  [TGWall.id]: (data: HPActorData) => {\n    return new TGWall(\n      HPVector.fromData(data.position),\n      HPVector.fromData(data.props['size']),\n    );\n  },\n  [TGWanderingTarget.id]: (data: HPActorData) => {\n    return new TGWanderingTarget(\n      HPVector.fromData(data.position),\n    );\n  },\n};\n\nexport default TGActorFactory;\n","import HPVector from \"../../engine/physics/vector\";\nimport HPStaticShapeActor from \"../../engine/actors/static-shape-actor\";\nimport HPActor from \"../../engine/core/actor\";\nimport HPCollision from \"../../engine/physics/collision\";\nimport HPActorType from \"../../engine/core/actor-type\";\n\nexport default class TGFireBall extends HPStaticShapeActor {\n\n  get size() { return new HPVector(20, 20); }\n  get isGravityBound() { return false; }\n\n  constructor(\n    position: HPVector,\n  ) {\n    super(\n      position,\n      {\n        color: 0xFF7700,\n        borderWidth: 2,\n        borderColor: 0x000000,\n      },\n    );\n  }\n\n  onCollision(actor: HPActor, collision: HPCollision) {\n    if (!collision.hit) return;\n\n    if (actor.isWall) {\n      this.kill();\n    } else if (actor.type === HPActorType.Unfriendly) {\n      actor.kill();\n      this.kill();\n    }\n    \n  }\n\n}\n","import HPVector from \"../../engine/physics/vector\";\nimport HPKeyListener from \"../../engine/interaction/key-listener\";\nimport HPStaticShapeActor from \"../../engine/actors/static-shape-actor\";\nimport TGFireBall from \"./fire-ball\";\nimport HPActorType from \"../../engine/core/actor-type\";\n\nexport default class TGHero extends HPStaticShapeActor {\n\n  static get runForce() { return new HPVector(3, 0); }\n  static get jumpForce() { return new HPVector(0, -16); }\n  static get shootForce() { return new HPVector(16, 0); }\n\n  get type() { return HPActorType.Friendly; }\n  get size() { return new HPVector(40, 80); }\n\n  private keyListeners: Array<HPKeyListener> = [];\n  private leftKeyDown = false;\n  private rightKeyDown = false;\n\n  constructor() {\n    super(\n      HPVector.Zero,\n      {\n        color: 0x0000FF,\n        borderWidth: 2,\n        borderColor: 0x000000,\n        cornerRadius: 4,\n      },\n    );\n\n    this.keyListeners.push(new HPKeyListener(37 /* left arrow */,\n      () => this.onLeftDown(),\n      () => this.onLeftUp(),\n    ));\n\n    this.keyListeners.push(new HPKeyListener(39 /* right arrow */,\n      () => this.onRightDown(),\n      () => this.onRightUp(),\n    ));\n\n    this.keyListeners.push(new HPKeyListener(38 /* up arrow */,\n      () => this.jump(),\n    ));\n\n    this.keyListeners.push(new HPKeyListener(90 /* z */,\n      () => this.shootFireBall(),\n    ));\n  }\n\n  destroy() {\n    this.keyListeners.forEach(listener => listener.destroy());\n  }\n\n  private runLeft() {\n    this.move(TGHero.runForce.flipHorz());\n  }\n\n  private runRight() {\n    this.move(TGHero.runForce);\n  }\n\n  private stopRunning() {\n    this.move(HPVector.Zero);\n  }\n\n  private onLeftDown() {\n    this.leftKeyDown = true;\n    this.runLeft();\n  }\n\n  private onLeftUp() {\n    this.leftKeyDown = false;\n    this.rightKeyDown ? this.runRight() : this.stopRunning();\n  }\n\n  private onRightDown() {\n    this.rightKeyDown = true;\n    this.runRight()\n  }\n\n  private onRightUp() {\n    this.rightKeyDown = false;\n    this.leftKeyDown ? this.runLeft() : this.stopRunning();\n  }\n\n  private jump() {\n    if (this.isOnGround) this.push(TGHero.jumpForce);\n  }\n\n  private shootFireBall() {\n    const fireBall = new TGFireBall(this.position);\n    fireBall.push(TGHero.shootForce.flipHorz(this.isFacingLeft));\n    this.newBornActors.push(fireBall);\n  }\n  \n}\n","import HPVector from \"../../engine/physics/vector\";\nimport HPStaticShapeActor from \"../../engine/actors/static-shape-actor\";\n\nexport default class TGWall extends HPStaticShapeActor {\n\n  static get id() { return 'Wall'; }\n\n  get size() { return this._size; }\n  get isWall() { return true; }\n  get isWallBound() { return false; }\n  get isGravityBound() { return false; }\n  get isAirFrictionBound() { return false; }\n\n  constructor(\n    position: HPVector,\n    private _size: HPVector,\n  ) {\n    super(\n      position.plus(_size.times(0.5)), // when creating a wall you specify the upper-left point, not the center\n      {\n        color: 0x333333,\n        borderWidth: 2,\n        borderColor: 0x757575,\n      },\n    );\n  }\n\n}\n","import HPStaticShapeActor from \"../../engine/actors/static-shape-actor\";\nimport HPVector from \"../../engine/physics/vector\";\nimport setTicksOut from \"../../engine/util/set-ticks-out\";\nimport HPActorType from \"../../engine/core/actor-type\";\nimport HPRandom from \"../../engine/util/random\";\n\nexport default class TGWanderingTarget extends HPStaticShapeActor {\n\n  static get id() { return 'WanderingTarget'; }\n\n  static get wanderForce() { return new HPVector(1, 0); }\n  static get jumpForce() { return new HPVector(0, -12); }\n\n  get type() { return HPActorType.Unfriendly; }\n  get size() { return new HPVector(30, 60); }\n\n  constructor(\n    position: HPVector,\n  ) {\n    super(\n      position,\n      {\n        color: 0xFF0000,\n        borderWidth: 2,\n        borderColor: 0x000000,\n        cornerRadius: 4,\n      },\n    );\n  }\n\n  init() {\n    super.init();\n\n    this.move(TGWanderingTarget.wanderForce.flipHorz(HPRandom.chance(0.5)));\n    this.changeDirection();\n  }\n\n  onTick() {\n    super.onTick();\n\n    if (this.isOnGround && HPRandom.chance(0.005)) {\n      this.push(TGWanderingTarget.jumpForce);\n    }\n  }\n\n  private changeDirection() {\n    this.move(this.moveForce.flipHorz());\n    setTicksOut(() => this.changeDirection(), HPRandom.int(80, 160));\n  }\n\n}\n","import HPApp from '../engine/core/app';\nimport HPVector from '../engine/physics/vector';\nimport TGHero from './actors/hero';\nimport TGActorFactory from './actor-factory';\n\nconst hero = new TGHero();\n\nconst app = new HPApp(\n  new HPVector(825, 525),\n  '#game-container',\n  TGActorFactory,\n  [],\n  'public/areas/test-1.json',\n  hero,\n  new HPVector(200, 700),\n  new HPVector(0, 1),\n  0.01,\n);\n\napp.start();\n"],"sourceRoot":""}